version: '3.9'

services:
  backend:
    build: ./backend
    container_name: taskkeep-backend
    restart: unless-stopped
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://taskkeep:secret@db:5432/taskkeep
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
    ports:
      - "8000:8000"

  db:
    build: ./postgres
    container_name: taskkeep-db
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: taskkeep
      POSTGRES_USER: taskkeep
      POSTGRES_PASSWORD: secret
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    networks:
      - internal
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "taskkeep"]
      interval: 5s
      timeout: 5s
      retries: 5



  frontend:
    build: ./frontend
    container_name: taskkeep-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - internal
    expose:
      - "80"

  nginx:
    image: nginx:latest
    container_name: taskkeep-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - internal
      - public

  prometheus:
    image: prom/prometheus
    container_name: taskkeep-prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - internal

  grafana:
    image: grafana/grafana
    container_name: taskkeep-grafana
    ports:
      - "3000:3000"
    networks:
      - internal

  loki:
    image: grafana/loki:2.9.2
    container_name: taskkeep-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/config.yaml:/etc/loki/config.yaml
    networks:
      - internal

volumes:
  db_data:

networks:
  internal:
    driver: bridge
  public:
    driver: bridge
